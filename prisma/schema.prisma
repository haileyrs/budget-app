// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./money.db"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  displayName   String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Budget        Budget[]
  MoneyAccount  MoneyAccount[]
  plaidItems    PlaidItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model PlaidItem {
  id          Int     @id @default(autoincrement())
  userId      String
  accessToken String
  itemId      String
  name        String?
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MoneyAccount {
  id          Int           @id @default(autoincrement())
  name        String
  type        String
  value       Float
  lastUpdated String
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  Transaction Transaction[]
}

model Budget {
  id         Int      @id @default(autoincrement())
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  max        Float
  value      Float
  month      Int
  year       Int
  user       User     @relation(fields: [userId], references: [id])
  userId     String
}

model Transaction {
  id             Int          @id @default(autoincrement())
  vendor         String
  amount         Float
  day            Int
  month          Int
  year           Int
  category       Category     @relation(fields: [categoryId], references: [id])
  categoryId     Int
  moneyAccount   MoneyAccount @relation(fields: [moneyAccountId], references: [id])
  moneyAccountId Int
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  Budget      Budget[]
  Transaction Transaction[]
}
